The ``matrix_divided`` module
=============================

Using ``matrix_divided``
-----------------------------

Importing the matrix-divided function to test

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

-----------------------------
Begin test cases:

>>> matrix_divided([[1, 2], [4, 5]], 3)
[[0.33, 0.67], [1.33, 1.67]]

>>> matrix_divided([[3, 4.5, 7], [5.5, 6, 7]], 3)
[[1.0, 1.5, 2.33], [1.83, 2.0, 2.33]]

>>> matrix_divided(["loba", 5, 6.6], [6, 7, "lo"], 3)
Traceback (most recent call last):
    ...
TypeError: matrix_divided() takes 2 positional arguments but 3 were given

>>> matrix_divided(["loba", 5, 6.6], [6, 7, "lo"], "gu")
Traceback (most recent call last):
    ...
TypeError: matrix_divided() takes 2 positional arguments but 3 were given

>>> matrix_divided(None, 2)
Traceback (most recent call last):
    ...
TypeError: 'NoneType' object is not iterable

>>> matrix_divided(True, [[1, 2], [4, 5]])
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided([[True, False], [1, 2], [4, 5]], 4)
[[0.25, 0.0], [0.25, 0.5], [1.0, 1.25]]


>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2, 3],[4, 6]], 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided(True, 2)
Traceback (most recent call last):
    ...
TypeError: 'bool' object is not iterable

>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

